name: Reusable workflow MLÂ§

on:
  workflow_call:
    inputs:
      config-path:
        required: false
        type: string
        value: '.github/workflows/ci.yml'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up JDK
      - name: Set up JDK 24
        uses: actions/setup-java@v3
        with:
          java-version: 24
          distribution: temurin

      # Cache Gradle dependencies
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Build the project
      - name: Build with Gradle
        run: ./gradlew build --no-daemon

      # Run unit tests
      - name: Run tests
        run: ./gradlew test --no-daemon

  e2e-tests:
    runs-on: ubuntu-latest
    needs: build

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up JDK
      - name: Set up JDK 24
        uses: actions/setup-java@v3
        with:
          java-version: 24
          distribution: temurin

      # Build Docker image
      - name: Build Docker image
        run: ./gradlew bootBuildImage

      # Start services with Docker Compose
      - name: Start services
        run: docker compose up -d

      # Run end-to-end tests
      - name: Run E2E tests
        working-directory: e2e-tests
        run: ./gradlew test --tests structuredconcurrency.SCRunner

      # Log services with Docker Compose
      - name: Log services
        run: docker compose logs
